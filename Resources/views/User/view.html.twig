{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroTagBundle::macros.html.twig' as _tag %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% import 'OroEmailBundle::macros.html.twig' as Email %}
{% import 'OroLocaleBundle::macros.html.twig' as Locale %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% set gridName = 'users-email-grid' %}

{% set format = oro_config_value('oro_locale.name_format') %}
{% oro_title_set({params : {"%username%": entity.fullname(format)|default('N/A') }}) %}
{% set audit_entity_class = 'Oro_Bundle_UserBundle_Entity_User' %}
{% macro api_data_block(user) %}
<div class="horizontal">
    <strong class="label label-info">{{ user.api ? user.api.apiKey : 'N/A' }}</strong>
    {% if resource_granted('oro_user_user_update') %}
        <a class="btn btn-small no-hash" id="btn-apigen" href="{{ path('oro_user_apigen', { id: user.id }) }}"
           data-title="{{ 'Generate key'|trans }}" data-message="{{ 'Generate key was successful. New key:'|trans }}">
            {{ 'Generate key'|trans }}
        </a>
    {% endif %}
</div>
{% endmacro %}

{% block navButtons %}
    {% if editRoute is defined %}
        {{ UI.button({'path' : path(editRoute), 'iClass' : 'icon-edit ', 'title' : 'Edit profile', 'label' : 'Edit'}) }}
    {% else %}
        {% if resource_granted('oro_user_user_update') %}
            {{ UI.button({'path' : path('oro_user_update', { id: entity.id }), 'iClass' : 'icon-edit ', 'title' : 'Edit user', 'label' : 'Edit'}) }}
        {% endif %}
    {% endif %}
    {% if resource_granted('oro_user_user_delete') and entity.id!=app.user.id %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_api_delete_user', {'id': entity.id}),
            'dataRedirect': path('oro_user_index'),
            'aCss': 'no-hash remove-button',
            'id': 'btn-remove-user',
            'dataId': entity.id,
            'dataMessage': 'Are you sure you want to delete this user?'|trans,
            'successMessage': 'User deleted'|trans,
            'title': 'Delete user',
            'label': 'Delete'
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity':      entity,
        'indexPath':   path('oro_user_index'),
        'indexLabel': 'Users'|trans,
        'entityTitle': entity.fullname(format)|default('N/A'),
        'hasAvatar':   true,
        'imagePath':   entity.imagePath,
    }
    %}
    {{ parent() }}
{% endblock pageHeader %}

{% block breadcrumbs %}
    {{ parent() }}
    <div class="status-enabled pull-left">
        {% if entity.enabled %}
            <div class="badge badge-enabled status-enabled"><i class="icon-status-enabled icon-circle"></i>{{ 'Active'|trans }}</div>
        {% else %}
            <div class="badge badge-enabled status-disabled"><i class="icon-status-disabled icon-circle"></i>{{ 'Inactive'|trans }}</div>
        {% endif %}
    </div>
{% endblock breadcrumbs %}

{% block stats %}
    {{ parent() }}
    <li>{{ 'Last logged in'|trans }}: {{ entity.lastLogin ? Locale.time(entity.lastLogin) : 'N/A' }}</li>
    <li>{{ 'Login count'|trans }}: {{ entity.loginCount|default(0) }}</li>
{% endblock stats %}

{% block content_data %}
  <div class="user-profile-cols">
    {% set id = 'user-profile' %}

    {% set dataSubBlocks = [UI.attibuteRow('Email', {value: entity.email, hint: 'Primary'|trans}, entity.emails|length ? {data: entity.emails, field:'email'} : {})] %}
    {% if resource_granted('oro_tag_view_tag_cloud') %}
        {% set dataSubBlocks = dataSubBlocks|merge([UI.renderAttribute('Tags'|trans, _tag.renderView(entity))]) %}
    {% endif %}

    {#{{ render(controller('OroEmailBundle:Email:activities', {'emails': entity.emails})) }}#}

    {% set dataBlocks = [
        {
            'title': 'General'|trans,
            'class': 'active',
            'subblocks': [
                {
                    'title': 'Basic Information'|trans,
                    'data': [
                        UI.attibuteRow('User name'|trans, entity.username),
                        UI.attibuteRow('First name'|trans, entity.firstname),
                        UI.attibuteRow('Last name'|trans, entity.lastname),
                        UI.attibuteRow('Birthday'|trans, entity.birthday ? Locale.date(entity.birthday) : 'N/A'),
                        UI.renderAttribute('API key'|trans, _self.api_data_block(entity))
                    ]
                },
                {
                'title': 'Contact Information'|trans,
                'data': dataSubBlocks
                }
            ]
        }
    ]
    %}

    {% if resource_granted('oro_email_view') %}
        {% set dataBlocks = dataBlocks|merge
            (
                    [{
                        'title': 'User emails'|trans,
                        'subblocks': [
                            {
                                'title': '',
                                'useSpan': false,
                                'data': [
                                    dataGrid.renderGrid(gridName, {userId: entity.id}),
                                    Email.renderJs()
                                ]
                            }
                        ]
                    }]
            )
        %}
    {% endif %}

    {% set data = { 'dataBlocks': dataBlocks } %}
    {{ parent() }}
  </div>
{% endblock content_data %}
